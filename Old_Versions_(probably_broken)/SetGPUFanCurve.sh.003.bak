#!/bin/bash
#
# /_scripts/SetGPUFanCurve.sh 
#
# ▛▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▜
# ▌╔══════════════════════════════════════════════════════════════════════════╗▐
# ▌║ Set GPU Fan Curve                                                        ║▐
# ▌╚══════════════════════════════════════════════════════════════════════════╝▐
# ▙▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▟
# ▌                                                                            ▐
# ▌ This Script sets various Fan Curves for my Sapphire Nitro+ Radeon RX 7900  ▐ 
# ▌ XTX 24GB GDDR6 Video Card.                                                 ▐
# ▌                                                                            ▐
# ▌ Note: 'fan_zero_rpm_enable' (and similarly others in the 'fan_ctrl'        ▐
# ▌ directory)  is a virtual file, that hooks into the Linux kernel's sysfs    ▐
# ▌ filesystem (specifically amdgpu kernel module for my RX 7900 XTX's         ▐
# ▌ overdrive (OD) features) allowing them to be changed via the echo or       ▐ 
# ▌ printf command and queried via the cat command.                            ▐
# ▙▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▟

     clear
     
# ╔════════════════════════════════════════════════════════════════════════════╗
# ║ ROOT CHECK                                                                 ║
# ╚════════════════════════════════════════════════════════════════════════════╝

if [ "$EUID" -ne 0 ]; then
    echo "Error: This script must be run as root (use sudo)."
    exit 1
fi

# ╔════════════════════════════════════════════════════════════════════════════╗
# ║ HELP FUNCTION                                                              ║
# ╚════════════════════════════════════════════════════════════════════════════╝    
show_help() {
cat << 'EOF'

▛▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▜
▌╔════════════════════════════════════════════════════════════════════════════╗▐
▌║ Set GPU Fan Curve - Help                                                   ║▐
▌╚════════════════════════════════════════════════════════════════════════════╝▐
▙▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▟
▌                                                                              ▐
▌ Usage:                                                                       ▐
▌   sudo SetGPUFanCurve.sh [PROFILE]                                           ▐
▌                                                                              ▐
▌   PROFILE: One of the following fan curve profiles to apply. If omitted,     ▐
▌            'default' is used.                                                ▐
▌                                                                              ▐
▌ Available Profiles:                                                          ▐
▌   default    - General purpose safe default (aggressive cooling, fans always ▐
▌               spin).                                                         ▐
▌   gaming     - For AAA gaming: Aggressive ramping to keep GPU cool,          ▐
▌               prioritizing temperature over noise/fan wear.                  ▐
▌   general    - For non-graphics tasks (e.g., email, coding): Balanced        ▐
▌               cooling with slightly quieter fans.                            ▐
▌   away       - For unattended/background tasks: Quiet optimization with      ▐
▌               zero-RPM mode enabled for silence when possible.               ▐
▌   ai         - For AI/ML/LLM tasks: Aggressive cooling for sustained high    ▐
▌               GPU loads.                                                     ▐
▌   current    - Display current GPU fan settings without making changes.      ▐
▌                                                                              ▐
▌ Examples:                                                                    ▐
▌   sudo SetGPUFanCurve.sh gaming      # Apply gaming profile                  ▐
▌   sudo SetGPUFanCurve.sh away        # Apply away (quiet) profile            ▐
▌   sudo SetGPUFanCurve.sh             # Apply default profile                 ▐
▌                                                                              ▐
▌ This script configures AMD GPU fan parameters via sysfs (/sys/class/drm/     ▐
▌ card0/device/gpu_od/fan_ctrl). It requires root privileges and assumes       ▐
▌ the amdgpu kernel module with overdrive features enabled.                    ▐
▌                                                                              ▐
▌ Parameters Set:                                                              ▐
▌   - fan_zero_rpm_enable: Enables/disables zero-RPM mode (0=always spin,      ▐
▌                          1=can stop at low temps).                           ▐
▌   - fan_minimum_pwm: Minimum fan speed % (15-100).                           ▐
▌   - fan_target_temperature: Base temp (°C) for curve activation.             ▐
▌   - acoustic_limit_rpm_threshold: Max RPM cap for noise control.             ▐
▌   - acoustic_target_rpm_threshold: Target RPM for quiet optimization.        ▐
▌   - fan_curve: Multi-node temp-to-PWM mapping (up to 10 points), committed   ▐
▌                with 'c'.                                                     ▐
▌                                                                              ▐                                                    ▐
▌ Important Note:                                                              ▐
▌   To use this script, AMD overdrive features must be enabled by setting      ▐
▌   amdgpu.ppfeaturemask in your GRUB kernel line (or whatever bootloader      ▐
▌   you're using). This enables fan curve control. Examples:                   ▐
▌                                                                              ▐
▌   amdgpu.ppfeaturemask=0xfffd7fff                                            ▐
▌   amdgpu.ppfeaturemask=0xffffffff                                            ▐
▌                                                                              ▐
▌   Full example:                                                              ▐
▌   linux /kernel-6.15.3-gentoo-EPC-hypervisor root=... init=...               ▐
▌   amdgpu.ppfeaturemask=0xfffd7fff                                            ▐
▌                                                                              ▐
▌   For more details, see AMD's official documentation:                        ▐
▌   https://docs.kernel.org/gpu/amdgpu/module-parameters.html#ppfeaturemask    ▐
▌                                                                              ▐ 
▙▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▟

EOF
}

# ╔════════════════════════════════════════════════════════════════════════════╗
# ║ ARGUMENT HANDLING                                                          ║
# ╚════════════════════════════════════════════════════════════════════════════╝

     if [ "$1" = '--help' ] || [ "$1" = '-h' ] || [ "$1" = '/?' ]; then
         show_help
         exit 0
     fi

     PROFILE="${1:-default}"
     
     
# ╔════════════════════════════════════════════════════════════════════════════╗
# ║ TEXT COLOURS                                                               ║
# ╚════════════════════════════════════════════════════════════════════════════╝

     readonly COL_TITLE="\e[36;44m" # Cyan on Blue
     readonly COL_LINE="\e[36m"     # Cyan on default
     readonly COL_BEFORE="\e[91m"   # Red on default
     readonly COL_AFTER="\e[92m"    # Green on default
     readonly COL_RESET="\e[0m"     # Resets colours
     

# ╔════════════════════════════════════════════════════════════════════════════╗
# ║ FILE NAMES - File names and Directories for setting GPU Parameters         ║
# ╚════════════════════════════════════════════════════════════════════════════╝

             FAN_CTRL_DIR="/sys/class/drm/card0/device/gpu_od/fan_ctrl"
      ACOUSTIC_LIMIT_FILE="acoustic_limit_rpm_threshold"
     ACOUSTIC_TARGET_FILE="acoustic_target_rpm_threshold"        
           FAN_CURVE_FILE="fan_curve"
         MINIMUM_PWM_FILE="fan_minimum_pwm"
         TARGET_TEMP_FILE="fan_target_temperature"
            ZERO_RPM_FILE="fan_zero_rpm_enable"


# ╔════════════════════════════════════════════════════════════════════════════╗
# ║ GLOBAL VARIABLES                                                           ║
# ╚════════════════════════════════════════════════════════════════════════════╝

     PARAM_DESCR=""

     FAN_ACOUSTIC_LIMIT=""
     FAN_ACOUSTIC_TARGET=""
     FAN_MINIMUM_PWM=""
     FAN_NODES=""
     FAN_TARGET_TEMP=""
     FAN_ZERO_RPM=""

     TITLE_TOP_LINE="$COL_TITLE╔══════════════════════════════════════╗$COL_RESET"
     TITLE_BOT_LINE="$COL_TITLE╚══════════════════════════════════════╝$COL_RESET"
     LINE="$COL_LINE——————————————————————————————————————————————$COL_RESET"


# ╔════════════════════════════════════════════════════════════════════════════╗
# ║ PROFILE DEFINITIONS                                                        ║
# ╚════════════════════════════════════════════════════════════════════════════╝

     # ———————————————————
     #  PROFILE: Default - This is a general purpose safe default profile if 
     #  none others are specifically set
     # ———————————————————
          FAN_ACOUSTIC_LIMIT_DEFAULT="3200"
          FAN_ACOUSTIC_TARGET_DEFAULT="3200"
          FAN_MINIMUM_PWM_DEFAULT="30"
          FAN_NODES_DEFAULT=(
               "0 25 30"
               "1 45 40"
               "2 55 70"
               "3 62 90"
               "4 70 100"
          )
          FAN_TARGET_TEMP_DEFAULT="40"
          FAN_ZERO_RPM_DEFAULT="0"


     # ———————————————————
     # PROFILE: Gaming - This profile is for AAA Gaming (Should aggressively ramp 
     # to ensure GPU stays as cool as possible, regardless of noise of fan wear)
     # ———————————————————
          FAN_ACOUSTIC_LIMIT_GAMING="3200"
          FAN_ACOUSTIC_TARGET_GAMING="3200"
          FAN_MINIMUM_PWM_GAMING="30"
          FAN_NODES_GAMING=(
               "0 25 30"
               "1 45 40"
               "2 55 70"
               "3 62 90"
               "4 70 100"
          )
          FAN_TARGET_TEMP_GAMING="40"
          FAN_ZERO_RPM_GAMING="0"


     # ———————————————————
     # PROFILE: General - This profile is suitable for general non-graphics 
     # intensive tasks (e.g., email, coding, word processing, etc)
     # ———————————————————
          FAN_ACOUSTIC_LIMIT_GENERAL="3200"
          FAN_ACOUSTIC_TARGET_GENERAL="3200"
          FAN_MINIMUM_PWM_GENERAL="25"
          FAN_NODES_GENERAL=(
               "0 25 25"
               "1 50 45"
               "2 60 60"
               "3 65 80"
               "4 70 100"
          )
          FAN_TARGET_TEMP_GENERAL="45"
          FAN_ZERO_RPM_GENERAL="0"


     # ———————————————————
     # PROFILE: Away - This profile is optimised for when the computer is 
     # unattended with screens turned off, and system is just running 
     # background tasks and services. 
     # ———————————————————
          FAN_ACOUSTIC_LIMIT_AWAY="3200"
          FAN_ACOUSTIC_TARGET_AWAY="3200"
          FAN_MINIMUM_PWM_AWAY="20"
          FAN_NODES_AWAY=(
               "0 25 20"
               "1 45 50"
               "2 55 70"
               "3 65 90"
               "4 70 100"
          )
          FAN_TARGET_TEMP_AWAY="50"
          FAN_ZERO_RPM_AWAY="1"


     # ———————————————————
     # PROFILE: AI -  This profile is optimised for AI/LLM/ML tasks and should 
     # have aggressive cooling at high GPU utilisation.
     # ———————————————————
          FAN_ACOUSTIC_LIMIT_AI="3200"
          FAN_ACOUSTIC_TARGET_AI="3200"
          FAN_MINIMUM_PWM_AI="30"
          FAN_NODES_AI=(
               "0 25 30"
               "1 45 40"
               "2 55 70"
               "3 62 90"
               "4 70 100"
          )
          FAN_TARGET_TEMP_AI="40"
          FAN_ZERO_RPM_AI="0"


# ╔════════════════════════════════════════════════════════════════════════════╗
# ║ SET PARAMETERS BASED ON PROFILE                                            ║
# ╚════════════════════════════════════════════════════════════════════════════╝

     case "$PROFILE" in 
        default) 
           FAN_ACOUSTIC_LIMIT="$FAN_ACOUSTIC_LIMIT_DEFAULT"
          FAN_ACOUSTIC_TARGET="$FAN_ACOUSTIC_TARGET_DEFAULT"
              FAN_MINIMUM_PWM="$FAN_MINIMUM_PWM_DEFAULT"
                    FAN_NODES=("${FAN_NODES_DEFAULT[@]}")
              FAN_TARGET_TEMP="$FAN_TARGET_TEMP_DEFAULT"
                 FAN_ZERO_RPM="$FAN_ZERO_RPM_DEFAULT"
          ;;
          
         general)
           FAN_ACOUSTIC_LIMIT="$FAN_ACOUSTIC_LIMIT_GENERAL"
          FAN_ACOUSTIC_TARGET="$FAN_ACOUSTIC_TARGET_GENERAL"
              FAN_MINIMUM_PWM="$FAN_MINIMUM_PWM_GENERAL"
                    FAN_NODES=("${FAN_NODES_GENERAL[@]}")
              FAN_TARGET_TEMP="$FAN_TARGET_TEMP_GENERAL"
                 FAN_ZERO_RPM="$FAN_ZERO_RPM_GENERAL"
          ;;

         gaming)
           FAN_ACOUSTIC_LIMIT="$FAN_ACOUSTIC_LIMIT_GAMING"
          FAN_ACOUSTIC_TARGET="$FAN_ACOUSTIC_TARGET_GAMING"
              FAN_MINIMUM_PWM="$FAN_MINIMUM_PWM_GAMING"
                    FAN_NODES=("${FAN_NODES_GAMING[@]}")
              FAN_TARGET_TEMP="$FAN_TARGET_TEMP_GAMING"
                 FAN_ZERO_RPM="$FAN_ZERO_RPM_GAMING"
          ;;
          
         ai)
           FAN_ACOUSTIC_LIMIT="$FAN_ACOUSTIC_LIMIT_AI"
          FAN_ACOUSTIC_TARGET="$FAN_ACOUSTIC_TARGET_AI"
              FAN_MINIMUM_PWM="$FAN_MINIMUM_PWM_AI"
                    FAN_NODES=("${FAN_NODES_AI[@]}")
              FAN_TARGET_TEMP="$FAN_TARGET_TEMP_AI"
                 FAN_ZERO_RPM="$FAN_ZERO_RPM_AI"
          ;;
           
         away)
           FAN_ACOUSTIC_LIMIT="$FAN_ACOUSTIC_LIMIT_AWAY"
          FAN_ACOUSTIC_TARGET="$FAN_ACOUSTIC_TARGET_AWAY"
              FAN_MINIMUM_PWM="$FAN_MINIMUM_PWM_AWAY"
                    FAN_NODES=("${FAN_NODES_AWAY[@]}")
              FAN_TARGET_TEMP="$FAN_TARGET_TEMP_AWAY"
                 FAN_ZERO_RPM="$FAN_ZERO_RPM_AWAY"
          ;;
          
         current)
           # No settings to load; just display current
          ;; 
          
         *) echo "Invalid profile: $PROFILE. Use: general, gaming, away, ai, or default." >&2; 
            exit 1 
         ;;
     esac

     echo -e "$COL_TITLE Profile: $PROFILE$COL_RESET\n"

# ╔════════════════════════════════════════════════════════════════════════════╗
# ║ OUTPUT PAFEATUREMASK                                                       ║
# ╚════════════════════════════════════════════════════════════════════════════╝

     ppfeature=$(cat /sys/module/amdgpu/parameters/ppfeaturemask 2>/dev/null || echo "not set")
     echo "The current amdgpu.ppfeaturemask = $ppfeature"
     echo ""
     
# ╔════════════════════════════════════════════════════════════════════════════╗
# ║ OUTPUT PAFEATUREMASK                                                       ║
# ╚════════════════════════════════════════════════════════════════════════════╝

# <To Be Implemented - Query from the driver not the grub line>

# ╔════════════════════════════════════════════════════════════════════════════╗
# ║ General GPU Parameter Set Function                                         ║
# ╚════════════════════════════════════════════════════════════════════════════╝

SetState() 
   { local descr="$1"
     local file="$2"
     local setting="$3"
     echo -e "$TITLE_TOP_LINE"
     echo -e "$COL_TITLE║ $descr ║$COL_RESET"
     echo -e "$TITLE_BOT_LINE\n"
     echo "Current State:-"
     echo -e "$LINE"
     output=$(cat "$FAN_CTRL_DIR/$file"); echo -e "$COL_BEFORE$output$COL_RESET"
     echo -e "$LINE"
     if [ -n "$setting" ]; then
         echo "echoing $setting to $FAN_CTRL_DIR/$file"
         printf '%s\n' "$setting" > "$FAN_CTRL_DIR/$file" || exit 1
         echo -e "$LINE"
         echo "New State:-"
         echo -e "$LINE"
         output=$(cat "$FAN_CTRL_DIR/$file"); echo -e "$COL_AFTER$output$COL_RESET"
     fi
     echo -e "$LINE\n\n"
   }

ShowCurrent() 
   { local descr="$1"
     local file="$2"
     echo -e "$TITLE_TOP_LINE"
     echo -e "$COL_TITLE║ $descr ║$COL_RESET"
     echo -e "$TITLE_BOT_LINE\n"
     echo "Current State:-"
     echo -e "$LINE"
     output=$(cat "$FAN_CTRL_DIR/$file"); echo -e "$COL_BEFORE$output$COL_RESET"
     echo -e "$LINE\n\n"
   }

# Change to fan control directory early for reliability
     cd "$FAN_CTRL_DIR" || { echo "Error: Cannot access $FAN_CTRL_DIR" >&2; exit 1; }

if [ "$PROFILE" = "current" ]; then
     echo -e "$COL_TITLE Current GPU Fan Settings$COL_RESET\n"
     
     PARAM_DESCR="Zero Fan Speed Function Status      "
     ShowCurrent "$PARAM_DESCR" "$ZERO_RPM_FILE"

     PARAM_DESCR="Minimum Fan Speed                   "
     ShowCurrent "$PARAM_DESCR" "$MINIMUM_PWM_FILE"

     PARAM_DESCR="Fan Target Temperature              "
     ShowCurrent "$PARAM_DESCR" "$TARGET_TEMP_FILE"

     PARAM_DESCR="Acoustic Limit RPM Threshold        "
     ShowCurrent "$PARAM_DESCR" "$ACOUSTIC_LIMIT_FILE"

     PARAM_DESCR="Acoustic Target RPM Threshold       "
     ShowCurrent "$PARAM_DESCR" "$ACOUSTIC_TARGET_FILE"

     PARAM_DESCR="Fan Curve                           "
     ShowCurrent "$PARAM_DESCR" "$FAN_CURVE_FILE"

     echo "Current settings displayed — no changes applied."
     exit 0
fi

# ╔════════════════════════════════════════════════════════════════════════════╗
# ║ Set GPU Zero Speed Fan Function                                            ║
# ║————————————————————————————————————————————————————————————————————————————║
# ║ fan_zero_rpm_enable: Enables/Disables zero-RPM mode, preventing fans from  ║
# ║ stopping below a temperature threshold for constant airflow.               ║
# ╚════════════════════════════════════════════════════════════════════════════╝

     PARAM_DESCR="Setting Zero Fan Speed Function     "
     SetState "$PARAM_DESCR" "$ZERO_RPM_FILE" "$FAN_ZERO_RPM"

# ╔════════════════════════════════════════════════════════════════════════════╗
# ║ Set Minimum Fan Speed                                                      ║
# ║————————————————————————————————————————————————————————————————————————————║
# ║ fan_minimum_pwm: Sets the lowest enforceable fan speed percentage (15-100) ║
# ║  across the entire curve.                                                  ║
# ╚════════════════════════════════════════════════════════════════════════════╝

     PARAM_DESCR="Setting The Minimum Fan Speed       "
     SetState "$PARAM_DESCR" "$MINIMUM_PWM_FILE" "$FAN_MINIMUM_PWM"

# ╔════════════════════════════════════════════════════════════════════════════╗
# ║ Set Fan Target Temperature                                                 ║
# ║————————————————————————————————————————————————————————————————————————————║
# ║ fan_target_temp: Defines the base temp (in °C) at which the fan curve      ║
# ║  begins active control and hysteresis applies.                             ║
# ╚════════════════════════════════════════════════════════════════════════════╝

     PARAM_DESCR="Setting Fan Target Temp             "
     SetState "$PARAM_DESCR" "$TARGET_TEMP_FILE" "$FAN_TARGET_TEMP"

# ╔════════════════════════════════════════════════════════════════════════════╗
# ║ Set Acoustic Limit RPM Threshold                                           ║
# ║————————————————————————————————————————————————————————————————————————————║
# ║ acoustic_limit_rpm_threshold: Establishes the maximum RPM cap for the      ║
# ║  acoustic (noise-minimizing) fan mode.                                     ║
# ╚════════════════════════════════════════════════════════════════════════════╝

     PARAM_DESCR="Setting Acoustic Limit RPM Thrshld  "
     SetState "$PARAM_DESCR" "$ACOUSTIC_LIMIT_FILE" "$FAN_ACOUSTIC_LIMIT"

# ╔════════════════════════════════════════════════════════════════════════════╗
# ║ Set Acoustic Target RPM Threshold                                          ║
# ║————————————————————————————————————————————————————————————————————————————║
# ║ acoustic_target_rpm_threshold: Specifies the target RPM for acoustic       ║
# ║ optimisation, influencing quiet-mode behaviour.                            ║
# ╚════════════════════════════════════════════════════════════════════════════╝

     PARAM_DESCR="Setting Acoustic Target RPM Thrshld "
     SetState "$PARAM_DESCR" "$ACOUSTIC_TARGET_FILE" "$FAN_ACOUSTIC_TARGET"

# ╔════════════════════════════════════════════════════════════════════════════╗
# ║ Set Fan Curve                                                              ║
# ║————————————————————————————————————————————————————————————————————————————║
# ║ fan_curve: Defines the multi-node temp-to-speed mapping (up to 10 points); ║
# ║  'c' commits the curve.                                                    ║
# ╚════════════════════════════════════════════════════════════════════════════╝

     PARAM_DESCR="Setting Fan Curve                "
     echo -e "$TITLE_TOP_LINE"
     echo -e "$COL_TITLE║ $PARAM_DESCR    ║$COL_RESET"
     echo -e "$TITLE_BOT_LINE\n"
     echo "Current State:-"
     echo -e "$LINE"
     output=$(cat "$FAN_CTRL_DIR/$FAN_CURVE_FILE"); echo -e "$COL_BEFORE$output$COL_RESET"
     echo -e "$LINE"
     echo "Applying fan curve nodes:"
     for node in "${FAN_NODES[@]}"; do
       echo "Echoing '$node' to $FAN_CTRL_DIR/$FAN_CURVE_FILE"
       printf '%s\n' "$node" > "$FAN_CTRL_DIR/$FAN_CURVE_FILE" || exit 1
     done
     echo "Committing fan curve"
     echo "Echoing 'c' to $FAN_CTRL_DIR/$FAN_CURVE_FILE (commit)"
     printf 'c\n' >"$FAN_CTRL_DIR/$FAN_CURVE_FILE" || exit 1
     echo -e "$LINE"
     echo "New State:-"
     echo -e "$LINE"
     output=$(cat "$FAN_CTRL_DIR/$FAN_CURVE_FILE"); echo -e "$COL_AFTER$output$COL_RESET"
     echo -e "$LINE\n"
     echo "Fan curve applied successfully — monitor with 'sensors' or 'amdgpu_top'."
